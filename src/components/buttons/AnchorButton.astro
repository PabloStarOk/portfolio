---
interface Props {
  href: string;
  ariaLabel: string;
  target?: string;
  rel?: string;
  content?: string;
  type?: "primary" | "secondary" | "tertiary";
}

const {
  href,
  ariaLabel,
  target = "_blank",
  rel = "",
  type = "primary",
} = Astro.props;

// Add "noopener" and "noreferrer" for links that open in a new tab, while avoiding duplicates
const relation =
  target === "_blank"
    ? [...new Set(["noopener", "noreferrer", ...rel.split(" ")])].join(" ")
    : rel;
---

<a
  class=`anchor-button anchor-button--${type}`
  href={href}
  target={target}
  rel={relation}
  aria-label={ariaLabel}
>
  {(type === "primary" || type === "tertiary") && <slot />}
  {
    type === "secondary" && (
      <div class="anchor-button-wrapper">
        <slot />
      </div>
    )
  }
</a>

<style>
  .anchor-button {
    /* Layout */
    display: flex;
    min-width: 2.813rem;
    min-height: 2.813rem;
    max-height: 2.813rem;
    padding: var(--space-300);
    align-items: center;
    justify-content: center;
    gap: var(--space-300);
    box-sizing: border-box;

    /* Style */
    border-radius: var(--radius-100);
    background: var(--primary-color-1000);

    /* Typography */
    color: var(--color-text-neutral-onneutral);
    text-decoration: none;
    font-size: var(--body-size-medium);
    font-style: normal;
    font-weight: var(--body-font-weight-regular);
    text-align: center;
    text-wrap: nowrap;
    text-overflow: ellipsis;
  }

  .anchor-button--primary {
    border: none;
  }

  .anchor-button--secondary {
    /* Layout */
    position: relative;
    padding: var(--space-25);
  }

  .anchor-button--tertiary {
    background: none;
  }

  .anchor-button-wrapper {
    /* Layout */
    width: 100%;
    aspect-ratio: 1/1;
    display: flex;
    align-items: center;
    justify-content: center;

    /* Style */
    background-color: var(--background-color);
    border-radius: calc(var(--space-25) + var(--radius-50));
  }
</style>
