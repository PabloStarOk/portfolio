---
import "@/styles/global.css";

interface Props {
  buttonType: "button-primary" | "button-secondary" | "button-tertiary";
  id?: string;
  className?: string;
  onclick?: string;
  ariaLabel?: string;
  targetDevice?: "mobile" | "desktop";
}

const { id, className, buttonType, onclick, ariaLabel, targetDevice } =
  Astro.props;

const classes = ["button-icon", buttonType, className]
  .filter(Boolean)
  .join(" ");
---

<button
  id={id}
  class={classes}
  onclick={onclick}
  aria-label={ariaLabel}
  data-target-device={targetDevice}
>
  {
    (buttonType === "button-primary" || buttonType === "button-tertiary") && (
      <slot />
    )
  }
  {
    buttonType === "button-secondary" && (
      <div class="anchor-button-wrapper">
        <slot />
      </div>
    )
  }
</button>

<style>
  .button-icon {
    display: flex;
    min-width: 2.813rem;
    min-height: 2.813rem;
    max-height: 2.813rem;
    padding: var(--space-300);
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: var(--space-300);
    box-sizing: border-box;

    border: none;
    border-radius: var(--radius-100);
    background: var(--primary-color-1000);

    width: auto;
    height: 100%;
    padding: 0;

    transition:
      transform 0.2s ease-in-out,
      filter 0.2s ease-in-out,
      outline-offset 0.2s ease-in-out;
  }

  .button-secondary {
    position: relative;
    padding: var(--space-25);
  }

  .button-tertiary {
    background: none;
  }

  .anchor-button-wrapper {
    /* Layout */
    width: 100%;
    aspect-ratio: 1/1;
    height: auto;
    display: flex;
    align-items: center;
    justify-content: center;

    /* Style */
    background-color: var(--background-color);
    border-radius: calc(var(--space-25) + var(--radius-50));
  }

  .button-icon:hover,
  .button-icon:focus-visible {
    transform: scale(1.1);
  }

  .button-icon:focus-visible {
    outline: var(--space-100) solid var(--right-color-1000);
    outline-width: 0.188rem;
    outline-offset: var(--space-50);
    border-radius: var(--radius-50);
  }

  .button-icon:active {
    filter: brightness(0.8);
    animation: bounce 0.2s ease-in-out;
  }

  @media screen and (min-width: 64em) {
    .button-icon[data-target-device="mobile"] {
      display: none;
    }
  }

  @keyframes bounce {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(0.9);
    }
    100% {
      transform: scale(1);
    }
  }
</style>
