---
import ThemeToggle from "@/components/themes/ThemeToggle.astro";
import CloseIcon from "@/icons/Close.astro";
import "@/styles/global.css";
import ButtonIcon from "@/components/buttons/ButtonIcon.astro";
import MenuLinks from "@/components/header/MenuLinks.astro";

interface Props {
  id: string;
}

const { id } = Astro.props;
---

<div id={id} class="menu" data-visible="false">
  <div class="menu__buttons">
    <ThemeToggle isVisibleOnMobile={true} />
    <ButtonIcon id="menuCloseButton" buttonType="tertiary">
      <CloseIcon size={32} style="fill: url(#brandGradient)" />
    </ButtonIcon>
  </div>
  <MenuLinks device="mobile" />
</div>

<style>
  .menu {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    box-sizing: border-box;

    position: fixed;
    top: 0;
    right: -100%;
    height: 100vh;

    box-shadow: -4px 0px 10px rgba(0, 0, 0, 0.25);
    padding-top: var(--space-600);
    background-color: var(--background-color-500);
    backdrop-filter: blur(0.25rem);

    z-index: 1000;

    transition: transform 0.3s ease-in-out;
  }

  .menu[data-visible="true"] {
    transform: translateX(-100%);
  }

  .menu__buttons {
    width: 100%;

    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;

    padding: 0 var(--space-600);
  }

  @media screen and (min-width: 768px) {
    .menu {
      transform: transform 0.3s ease-in-out;
      width: 50vw;
      right: -50%;

      border-style: none none none solid;
      border-width: 1px;
      border-image: var(--primary-color-top-1000) 1;
    }
  }

  @media screen and (max-width: 767px) {
    .menu {
      width: 100vw;
    }

    .menu__links__link {
      padding: var(--space-300);
    }
  }

  @media screen and (min-width: 1024px) {
    .menu {
      display: none;
    }
  }
</style>

<script>
  function findMenuElement(event: Event): HTMLDivElement {
    const targetElement = event.target as HTMLElement;
    return targetElement.closest(".menu") as HTMLDivElement;
  }

  function closeMenu(event: Event) {
    const menuElement = findMenuElement(event);
    if (menuElement) {
      menuElement.dataset.visible = "false";
      document.body.style.overflow = "visible";
    }
  }

  function moveToSection(event: Event) {
    closeMenu(event);
    // TODO: Add logic to move to the section.
  }

  const closeButton = document.getElementById(
    "menuCloseButton"
  ) as HTMLButtonElement;
  const sectionLinksCollection = document.getElementsByClassName(
    "menu-links__link"
  ) as HTMLCollectionOf<HTMLAnchorElement>;

  closeButton.addEventListener("click", closeMenu);
  const sectionLinks = [...sectionLinksCollection];

  sectionLinks.forEach((link: HTMLAnchorElement) =>
    link.addEventListener("click", moveToSection)
  );
</script>
