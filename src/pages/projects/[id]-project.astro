---
import ProjectHero, {
  type ProjectButton,
} from "@/components/projects/content/ProjectHero.astro";
import ProjectTitle from "@/components/projects/content/ProjectTitle.astro";
import { projectsIconsDir, projectsThumbnailsDir } from "@/constants";
import Layout from "@/layouts/Layout.astro";
import { getCollection, render } from "astro:content";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { id: project.id },
    props: { project },
  }));
}

// Project data
const thumbnailImports = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/projects/thumbnails/*.webp",
  { eager: true }
);
const { project } = Astro.props;
const { name, assets, hero } = project.data;
const { Content } = await render(project);

// Hero buttons
const buttonAriaLabels: ReadonlyMap<string, string> = new Map([
  ["LiveDemo", "DemostraciÃ³n del proyecto."],
  ["GitHub", "Repositorio de GitHub del proyecto."],
]);
const buttons: ProjectButton[] = [];
hero.buttons.map((button) =>
  buttons.push({
    type: button.type,
    href: button.url,
    ariaLabel: buttonAriaLabels.get(button.type) as string,
  })
);
---

<Layout
  title=`Proyecto ${name} - Pedro Rodriguez`
  mainClass="project-page"
  displayNavLinks={false}
  displayThemeToggle={false}
  displayBackButton={true}
>
  <ProjectTitle
    title={name}
    iconSrc={projectsIconsDir + assets.icon.fileName}
    iconAlt={assets.icon.alt}
  />
  <div class="project-page__content">
    <ProjectHero
      thumbnailSrc={thumbnailImports[
        projectsThumbnailsDir + assets.thumbnail.fileName
      ].default}
      thumbnailAlt={assets.thumbnail.alt}
      description={hero.description}
      buttons={buttons}
    />
    <Content />
  </div>
</Layout>

<style>
  .project-page {
    /* Layout */
    display: flex;
    padding: var(--space-400) var(--space-0);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--space-1200);
    margin: var(--space-800) var(--space-0);

    /* Style */
    border-radius: var(--radius-100);
    border: 1px solid var(--color-border-default-default);
  }

  .project-page__content {
    /* Layout */
    display: flex;
    padding: var(--space-0) var(--space-300);
    flex-direction: column;
    align-items: center;
    gap: var(--space-1200);
    align-self: stretch;
  }

  @media screen and (min-width: 48em) {
    .project-page {
      /* Layout */
      padding: var(--space-600) var(--space-0);
      margin: var(--space-1200) var(--space-0);
    }

    .project-page__content {
      /* Layout */
      padding: var(--space-0) var(--space-800);
      gap: var(--space-1600);
    }
  }

  @media screen and (min-width: 64em) {
    .project-page {
      /* Layout */
      padding: var(--space-800) var(--space-0);
      margin: var(--space-1600) var(--space-0);
    }

    .project-page__content {
      /* Layout */
      padding: var(--space-0) var(--space-1200);
      gap: var(--space-2400);
    }
  }
</style>
