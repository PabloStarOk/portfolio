---
import ProjectHero, {
  type ProjectButton,
} from "@/components/projects/content/ProjectHero.astro";
import ProjectTitle from "@/components/projects/content/ProjectTitle.astro";
import { projectsIconsDir, projectsThumbnailsDir } from "@/constants";
import Layout from "@/layouts/Layout.astro";
import { getCollection, render } from "astro:content";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { id: project.id },
    props: { project },
  }));
}

// Project data
const thumbnailImports = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/projects/thumbnails/*.webp",
  { eager: true }
);
const { project } = Astro.props;
const { name, assets, hero } = project.data;
const { Content } = await render(project);

// Hero buttons
const buttonAriaLabels: ReadonlyMap<string, string> = new Map([
  ["LiveDemo", "DemostraciÃ³n del proyecto."],
  ["GitHub", "Repositorio de GitHub del proyecto."],
]);
const buttons: ProjectButton[] = [];
hero.buttons.map((button) =>
  buttons.push({
    type: button.type,
    href: button.url,
    ariaLabel: buttonAriaLabels.get(button.type) as string,
  })
);
---

<Layout
  title=`Proyecto ${name} - Pedro Rodriguez`
  displayNavLinks={false}
  displayThemeToggle={false}
  displayBackButton={true}
>
  <ProjectTitle
    title={name}
    iconSrc={projectsIconsDir + assets.icon.fileName}
    iconAlt={assets.icon.alt}
  />
  <ProjectHero
    thumbnailSrc={thumbnailImports[
      projectsThumbnailsDir + assets.thumbnail.fileName
    ].default}
    thumbnailAlt={assets.thumbnail.alt}
    description={hero.description}
    buttons={buttons}
  />
  <Content />
</Layout>
